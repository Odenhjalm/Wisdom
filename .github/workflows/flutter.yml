name: Flutter CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Install dependencies
        run: flutter pub get

      - name: Check formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze
        run: flutter analyze

      - name: Run tests
        run: flutter test

      - name: Set up Python for backend tests
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install backend dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install

      - name: Verify schema sync
        run: make schema.check

      - name: Run backend tests
        working-directory: backend
        run: poetry run pytest

  qa-smoke:
    runs-on: ubuntu-latest
    needs: build
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - "5432:5432"
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      QA_API_BASE_URL: http://127.0.0.1:8000
      QA_TEACHER_EMAIL: teacher@example.com
      QA_TEACHER_PASSWORD: teacher123
      QA_STUDENT_EMAIL: student@example.com
      QA_STUDENT_PASSWORD: student123
      LOCAL_DATABASE_URL: postgresql://oden:1124vattnaRn@127.0.0.1:5432/wisdom
      PGPASSWORD: 1124vattnaRn

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y postgresql-client curl

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install ./backend requests

      - name: Prepare database schema
        run: |
          PGPASSWORD=postgres psql -h 127.0.0.1 -U postgres -c "CREATE USER oden WITH PASSWORD '1124vattnaRn';" || true
          PGPASSWORD=postgres psql -h 127.0.0.1 -U postgres -c "ALTER ROLE oden WITH LOGIN;"
          PGPASSWORD=postgres psql -h 127.0.0.1 -U postgres -c "CREATE DATABASE wisdom OWNER oden;" || true
          PGPASSWORD=1124vattnaRn LOCAL_DATABASE_URL=$LOCAL_DATABASE_URL scripts/setup_local_backend.sh

      - name: Launch backend
        run: |
          nohup uvicorn app.main:app --host 0.0.0.0 --port 8000 > ../backend.log 2>&1 &
        working-directory: backend
        env:
          DATABASE_URL: ${{ env.LOCAL_DATABASE_URL }}

      - name: Wait for backend to start
        run: |
          for i in {1..30}; do
            if curl -sSf http://127.0.0.1:8000/ >/dev/null; then
              exit 0
            fi
            sleep 1
          done
          echo "Backend failed to start" >&2
          exit 1

      - name: Run teacher smoke test
        run: python scripts/qa_teacher_smoke.py

      - name: Upload backend log on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: backend-log
          path: backend.log
